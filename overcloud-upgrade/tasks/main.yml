 - name: " Create script / touch update-nic-templates.sh "
   shell: |
        source ~/stackrc      
        touch update-nic-templates.sh
  
 - name: Updating network interface templates
   ansible.builtin.blockinfile:
     path: /home/stack/update-nic-templates.sh
     block: |
          #!/bin/bash
          STACK_NAME="overcloud"
          ROLES_DATA="/usr/share/openstack-tripleo-heat-templates/roles_data.yaml"
          NETWORK_DATA="/usr/share/openstack-tripleo-heat-templates/network_data.yaml"
          NIC_CONFIG_LINES=$(openstack stack environment show $STACK_NAME | grep "::Net::SoftwareConfig" | sed -E 's/ *OS::TripleO::// ; s/::Net::SoftwareConfig:// ; s/ http.*user-files/ /')
          echo "$NIC_CONFIG_LINES" | while read LINE; do
              ROLE=$(echo "$LINE" | awk '{print $1;}')
              NIC_CONFIG=$(echo "$LINE" | awk '{print $2;}')

              if [ -f "$NIC_CONFIG" ]; then
                  echo "Updating template for $ROLE role."
                  python3 /usr/share/openstack-tripleo-heat-templates/tools/merge-new-params-nic-config-script.py \
                      --tht-dir /usr/share/openstack-tripleo-heat-templates \
                      --roles-data $ROLES_DATA \
                      --network-data $NETWORK_DATA \
                      --role-name "$ROLE" \
                      --discard-comments yes \
                      --template "$NIC_CONFIG"
              else
                   echo "No NIC template detected for $ROLE role. Skipping $ROLE role."
              fi
           done
 
 - name: " Add executable permissions to the script / chmod +x update-nic-templates.sh "
   shell: |
       source ~/stackrc      
       chmod +x update-nic-templates.sh
 
 - name: " Run the script update-nic-templates.sh "
   shell: |
        source ~/stackrc  
        ./update-nic-templates.sh
   register: results_validate
 - debug:
     var: results_validate.stdout_lines

 - name: " Run prepare / openstack overcloud upgrade prepare --templates "
   shell: |
        source ~/stackrc  
        openstack overcloud upgrade prepare --templates -e /home/stack/containers-prepare-parameter.yaml -e /home/stack/templates/upgrades-environment.yaml -e /home/stack/templates/rhsm.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/services/neutron-ovs.yaml -y  
   register: results_validate
 - debug:
     var: results_validate.stdout_lines

 - name: " Run Download the container images /  openstack overcloud external-upgrade run --tags container_image_prepare -y "
   shell: |
        source ~/stackrc  
        openstack overcloud external-upgrade run --tags container_image_prepare -y  
   register: results_validate
 - debug:
     var: results_validate.stdout_lines
      
 - name: " Run system_upgrade / openstack overcloud upgrade run --tags system_upgrade --limit overcloud-controller-0 -y "
   shell: |
        source ~/stackrc  
        openstack overcloud upgrade run --tags system_upgrade --limit overcloud-controller-0 -y
   register: results_validate
 - debug:
     var: results_validate.stdout_lines

 - name: " Transfer db from existing node to bootstarp_node / openstack overcloud external-upgrade run --tags system_upgrade_transfer_data -y "
   shell: |
        source ~/stackrc  
        openstack overcloud external-upgrade run --tags system_upgrade_transfer_data -y
   register: results_validate
 - debug:
     var: results_validate.stdout_lines
     
 - name: " Launch temporary rhosp_v16.2 container on compute_nodes / openstack overcloud upgrade run --playbook upgrade_steps_playbook.yaml --tags nova_hybrid_state --limit all -y "
   shell: |
        source ~/stackrc  
        openstack overcloud upgrade run --playbook upgrade_steps_playbook.yaml --tags nova_hybrid_state --limit all -y
   register: results_validate
 - debug:
     var: results_validate.stdout_lines

 - name: " Upgrade overcloud with no tags / openstack overcloud upgrade run --limit overcloud-controller-0 -y "
   shell: |
        source ~/stackrc  
        openstack overcloud upgrade run --limit overcloud-controller-0 -y
   register: results_validate
 - debug:
     var: results_validate.stdout_lines
